apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-lotus-node-app
  labels:
    app: lotus-node-app
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ template "chart.servicename" . }}
  selector:
    matchLabels:
      app: lotus-node-app
  template:
    metadata:
      labels:
        app: lotus-node-app
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
{{- if .Values.securityContext.runAsNonRoot }}
      securityContext:
        # The image runs as uid 1000 by default, and needs to be able to write to
        # the persistent volume to be able to start.
        fsGroup: {{ .podSecurityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
{{- end }}
      volumes:
{{- if .Values.secretVolume.enabled }}
        - name: lotus-secret-vol
          secret:
            secretName: lotus-secret
            defaultMode: 384 # permission 0600
{{- end }}
{{- if .Values.init.import.volume }}
{{ toYaml .Values.init.import.volume | indent 8 }}
{{- end }}
      initContainers:
{{- if .Values.secretVolume.enabled }}
      - name: api-keys
        image: busybox
        command: ["/bin/sh","-c"]
        args: ["mkdir -p /lotus/keystore; cp /secret/privatekey /lotus/keystore/MF2XI2BNNJ3XILLQOJUXMYLUMU; cp /secret/token /lotus/token"]
        volumeMounts:
          - name: lotus-secret-vol
            mountPath: "/secret"
          - name: {{ .Release.Name }}-lotus-vol
            mountPath: /lotus
{{- end }}
{{- if .Values.init.sync.enabled }}
      - name: sync-wait
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        command: ["/bin/entrypoint","-s"]
        volumeMounts:
          - name: {{ .Release.Name }}-lotus-vol
            mountPath: /root/.lotus
{{- end }}
{{- if .Values.init.import.enabled }}
      - name: import-wait
        image: debian:stable
        command: ["/bin/sh","-c"]
        args: ["until [ -f /chain/chain.car ] && [ ! -f /chain/chain.car.lock ]; do sleep 5; done"]
        volumeMounts:
          - name: {{ (index .Values.init.import.volume 0).name }}
            mountPath: /chain
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        {{- if .Values.init.import.enabled }}
        command: ["/bin/entrypoint","-d", "-i"]
        {{- else }}
        command: ["/bin/entrypoint","-d"]
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          exec:
            command:
              - test
              - -f
              - /root/.lotus/datastore/000000.vlog
          initialDelaySeconds: 60
          periodSeconds: 60
        readinessProbe:
          exec:
            command:
              - test
              - -f
              - /root/.lotus/datastore/000000.vlog
          initialDelaySeconds: 60
          periodSeconds: 60
        ports:
        - containerPort: 1234
          name: api
        - containerPort: 1235
          name: p2p
        volumeMounts:
          - name: {{ .Release.Name }}-lotus-vol
            mountPath: /root/.lotus
        {{- if .Values.init.import.enabled }}
          - name: {{ (index .Values.init.import.volume 0).name }}
            mountPath: /chain
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Release.Name }}-lotus-vol
        {{- range $key, $value := .Values.persistence.lotus.annotations }}
            {{ $key }}: {{ $value }}
        {{- end }}
      spec:
        accessModes:
            {{- range .Values.persistence.lotus.accessModes }}
            - {{ . | quote }}
            {{- end }}
        resources:
            requests:
                storage: {{ .Values.persistence.lotus.size | quote }}
        {{- if .Values.persistence.lotus.storageClassName }}
        {{- if (eq "-" .Values.persistence.lotus.storageClassName) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.lotus.storageClassName }}"
        {{- end }}
        {{- end }}
  {{- end }}
