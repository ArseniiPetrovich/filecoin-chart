helm upgrade --install --dry-run --debug filecoin .
Release "filecoin" has been upgraded. Happy Helming!
NAME: filecoin
LAST DEPLOYED: Mon Feb  3 14:51:43 2020
NAMESPACE: default
STATUS: pending-upgrade
REVISION: 8
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
affinity: {}
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: openworklabs/lotus
imagePullSecrets: []
ingress:
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-headers: Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Length,Content-Range,Range
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    nginx.ingress.kubernetes.io/ingress.class: nginx
  enabled: true
nameOverride: ""
nodeSelector: {}
persistence:
  enabled: true
  lotus:
    accessModes:
    - ReadWriteOnce
    size: 20Gi
  proof:
    accessModes:
    - ReadWriteOnce
    size: 100Mi
podSecurityContext:
  fsGroup: 2000
replicaCount: 1
resources:
  limits:
    cpu: 1000m
    memory: 6Gi
  requests:
    cpu: 500m
    memory: 4Gi
securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: false
  runAsUser: 1000
service:
  port: 1234
  targetPort: 1234
  type: ClusterIP
serviceAccount:
  create: false
  name: null
swarm:
  enabled: false
tolerations: []

HOOKS:
---
# Source: filecoin/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "filecoin-test-connection"
  labels:

    helm.sh/chart: filecoin-0.1.0
    app.kubernetes.io/name: filecoin
    app.kubernetes.io/instance: filecoin
    app.kubernetes.io/version: "0.2.6.7"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['filecoin:1234']
  restartPolicy: Never
MANIFEST:
---
# Source: filecoin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: lotus-node-service
spec:
  type: ClusterIP
  selector:
    app: lotus-node-app
  ports:
    - protocol: TCP
      port: 1234
      targetPort: 1234
      name: api
---
# Source: filecoin/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lotus-node-app
  labels:
    app: lotus-node-app
spec:
  replicas: 1
  serviceName: filecoin
  selector:
    matchLabels:
      app: lotus-node-app
  template:
    metadata:
      labels:
        app: lotus-node-app
        chart: filecoin-0.1.0
        heritage: Helm
        release: filecoin
    spec:
      volumes:
        - name: lotus-secret-vol
          secret:
            secretName: lotus-secret
            defaultMode: 384 # permission 0600
      initContainers:
      - name: config-data1
        image: busybox
        command: ["/bin/sh","-c"]
        args: ["touch /lotus/privatekey; echo 'hello' >> /lotus/hi && cp /secret/token /lotus/token_copy"]
        volumeMounts:
        - name: lotus-secret-vol
          mountPath: "/secret"
        - name: lotus-vol
          mountPath: /lotus
      - name: config-data2
        image: busybox
        command: ["touch","/lotus/privatekey"]
        volumeMounts:
        - name: lotus-secret-vol
          mountPath: "/secret"
        - name: lotus-vol
          mountPath: /lotus
      containers:
      - name: filecoin
        image: "openworklabs/lotus:0.2.6.7"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
              - test
              - -f
              - /root/.lotus/datastore/000000.vlog
          initialDelaySeconds: 60
          periodSeconds: 60
        readinessProbe:
          exec:
            command:
              - test
              - -f
              - /root/.lotus/datastore/000000.vlog
          initialDelaySeconds: 60
          periodSeconds: 60
        ports:
        - containerPort: 8080
          name: api-proxy
        - containerPort: 1234
          name: api
        - containerPort: 1235
          name: p2p
        volumeMounts:
          - name: lotus-secret-vol
            readOnly: false
            mountPath: "/etc/lotus-secret-vol"
          - name: lotus-vol
            mountPath: /root/.lotus
          - name: proof-vol
            mountPath: /var/tmp/filecoin-proof-parameters
        resources:
          limits:
            cpu: 1000m
            memory: 6Gi
          requests:
            cpu: 500m
            memory: 4Gi
  volumeClaimTemplates:
    - metadata:
        name: lotus-vol
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "20Gi"
    - metadata:
        name: proof-vol
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
---
# Source: filecoin/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: filecoin-api
  labels:
    helm.sh/chart: filecoin-0.1.0
    app.kubernetes.io/name: filecoin
    app.kubernetes.io/instance: filecoin
    app.kubernetes.io/version: "0.2.6.7"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-headers: Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Length,Content-Range,Range
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    nginx.ingress.kubernetes.io/ingress.class: nginx
spec:
  rules:
#  - host: api.openworklabs.com
  - http:
      paths:
      - path: /
        backend:
          serviceName: lotus-node-service
          servicePort: 1234

NOTES:
1. Get the application URL by running these commands:
